name: Update depended packages
on:
  pull_request:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:
jobs:
  stablearhtns:
    name: Check for broken evolutions
    runs-on: macos-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
      - name: Configure git credentials
        if: github.event_name != 'pull_request'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Install a flaked Nix
        uses: DeterminateSystems/nix-installer-action@v16
      - name: Setup the Nix cache
        uses: DeterminateSystems/flakehub-cache-action@v1
      - name: Update to the latest
        if: github.event_name != 'pull_request'
        run: |
          nix flake update
      - name: Save the flake locks
        if: github.event_name != 'pull_request'
        run: |
          git checkout -b update
          git commit --all --message "chore(deps): automatic version bump to the most recent packages"
          git push -u origin update
      - name: Confirm darwin builds
        run: |
          nix build .#darwinConfigurations.ezmbp24.local.system
  updateronimo:
    name: Snapshot upstream releases
    needs: stablearhtns
    runs-on: self-hosted
    steps:
      - name: Checkout the changes
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || 'update' }}
      - name: Reflect existing Nix
        id: nixos
        continue-on-error: true
        run: uname -a | grep NixOS
      - name: Install a flaked Nix
        if: steps.nixos.outcome != 'success'
        uses: DeterminateSystems/nix-installer-action@v16
      - name: Write remembered commit
        run: |
          cat flake.lock
      - name: Insure nixos builds
        run: |
          nix build .#nixosConfigurations.tom.config.system.build.toplevel
      - name: Save changed version
        if: github.event_name != 'pull_request'
        run: |
          git checkout main
          git merge update
          git push -u origin main
          git push origin --delete update
